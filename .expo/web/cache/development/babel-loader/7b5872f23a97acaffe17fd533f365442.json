{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/hamedjenabi/project/react-native-popword/App.js\";\nimport 'react-native-gesture-handler';\nimport { firebase } from \"./src/firebase/config\";\nimport React, { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { LoginScreen, HomeScreen, RegistrationScreen, ListScreen } from \"./src/screens\";\nimport { decode, encode } from 'base-64';\n\nif (!global.btoa) {\n  global.btoa = encode;\n}\n\nif (!global.atob) {\n  global.atob = decode;\n}\n\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  useEffect(function () {\n    var usersRef = firebase.firestore().collection('users');\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        usersRef.doc(user.uid).get().then(function (document) {\n          var userData = document.data();\n          setLoading(false);\n          setUser(userData);\n        }).catch(function (error) {\n          setLoading(false);\n        });\n      } else {\n        setLoading(false);\n      }\n    });\n  }, []);\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, user ? React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, function (props) {\n    return React.createElement(HomeScreen, _extends({}, props, {\n      extraData: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 27\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"List\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, function (props) {\n    return React.createElement(ListScreen, _extends({}, props, {\n      extraData: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }\n    }));\n  })) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Registration\",\n    component: RegistrationScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/hamedjenabi/project/react-native-popword/App.js"],"names":["firebase","React","useEffect","useState","NavigationContainer","createStackNavigator","LoginScreen","HomeScreen","RegistrationScreen","ListScreen","decode","encode","global","btoa","atob","Stack","App","loading","setLoading","user","setUser","usersRef","firestore","collection","auth","onAuthStateChanged","doc","uid","get","then","document","userData","data","catch","error","props"],"mappings":";;;AAAA,OAAO,8BAAP;AACA,SAASA,QAAT;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SACEC,WADF,EAEEC,UAFF,EAGEC,kBAHF,EAIEC,UAJF;AAMA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,SAA/B;;AACA,IAAI,CAACC,MAAM,CAACC,IAAZ,EAAkB;AAChBD,EAAAA,MAAM,CAACC,IAAP,GAAcF,MAAd;AACD;;AACD,IAAI,CAACC,MAAM,CAACE,IAAZ,EAAkB;AAChBF,EAAAA,MAAM,CAACE,IAAP,GAAcJ,MAAd;AACD;;AAED,IAAMK,KAAK,GAAGV,oBAAoB,EAAlC;AAEA,eAAe,SAASW,GAAT,GAAe;AAAA,kBACEb,QAAQ,CAAC,IAAD,CADV;AAAA;AAAA,MACrBc,OADqB;AAAA,MACZC,UADY;;AAAA,mBAEJf,QAAQ,CAAC,IAAD,CAFJ;AAAA;AAAA,MAErBgB,IAFqB;AAAA,MAEfC,OAFe;;AAI5BlB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMmB,QAAQ,GAAGrB,QAAQ,CAACsB,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAjB;AACAvB,IAAAA,QAAQ,CAACwB,IAAT,GAAgBC,kBAAhB,CAAmC,UAACN,IAAD,EAAU;AAC3C,UAAIA,IAAJ,EAAU;AACRE,QAAAA,QAAQ,CACLK,GADH,CACOP,IAAI,CAACQ,GADZ,EAEGC,GAFH,GAGGC,IAHH,CAGQ,UAACC,QAAD,EAAc;AAClB,cAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,EAAjB;AACAd,UAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,UAAAA,OAAO,CAACW,QAAD,CAAP;AACD,SAPH,EAQGE,KARH,CAQS,UAACC,KAAD,EAAW;AAChBhB,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD,SAVH;AAWD,OAZD,MAYO;AACLA,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAhBD;AAiBD,GAnBQ,EAmBN,EAnBM,CAAT;AAyBA,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,GACH,0CACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACgB,KAAD;AAAA,WAAW,oBAAC,UAAD,eAAgBA,KAAhB;AAAuB,MAAA,SAAS,EAAEhB,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAX;AAAA,GADH,CADF,EAIE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACgB,KAAD;AAAA,WAAW,oBAAC,UAAD,eAAgBA,KAAhB;AAAuB,MAAA,SAAS,EAAEhB,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAX;AAAA,GADH,CAJF,CADG,GAUH,0CACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAEb,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,cAAnB;AAAkC,IAAA,SAAS,EAAEE,kBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAXJ,CADF,CADF;AAqBD","sourcesContent":["import 'react-native-gesture-handler';\nimport { firebase } from './src/firebase/config';\n\nimport React, { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport {\n  LoginScreen,\n  HomeScreen,\n  RegistrationScreen,\n  ListScreen,\n} from './src/screens';\nimport { decode, encode } from 'base-64';\nif (!global.btoa) {\n  global.btoa = encode;\n}\nif (!global.atob) {\n  global.atob = decode;\n}\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const usersRef = firebase.firestore().collection('users');\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        usersRef\n          .doc(user.uid)\n          .get()\n          .then((document) => {\n            const userData = document.data();\n            setLoading(false);\n            setUser(userData);\n          })\n          .catch((error) => {\n            setLoading(false);\n          });\n      } else {\n        setLoading(false);\n      }\n    });\n  }, []);\n\n  // if (loading) {\n  //   return <></>;\n  // }\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        {user ? (\n          <>\n            <Stack.Screen name=\"Home\">\n              {(props) => <HomeScreen {...props} extraData={user} />}\n            </Stack.Screen>\n            <Stack.Screen name=\"List\">\n              {(props) => <ListScreen {...props} extraData={user} />}\n            </Stack.Screen>\n          </>\n        ) : (\n          <>\n            <Stack.Screen name=\"Login\" component={LoginScreen} />\n            <Stack.Screen name=\"Registration\" component={RegistrationScreen} />\n          </>\n        )}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}