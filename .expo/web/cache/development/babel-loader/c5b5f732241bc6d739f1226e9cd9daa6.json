{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/hamedjenabi/project/react-native-popword/src/screens/RegistrationScreen/RegistrationScreen.js\";\nimport React, { useState } from 'react';\nimport { firebase } from \"../../firebase/config\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport styles from \"./styles\";\nexport default function RegistrationScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullName = _useState2[0],\n      setFullName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var onFooterLinkPress = function onFooterLinkPress() {\n    navigation.navigate('Login');\n  };\n\n  var onRegisterPress = function onRegisterPress() {\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match.\");\n      return;\n    }\n\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n      var uid = response.user.uid;\n      var data = {\n        id: uid,\n        email: email,\n        fullName: fullName\n      };\n      var usersRef = firebase.firestore().collection('users');\n      usersRef.doc(uid).set(data).then(function () {\n        navigation.navigate('Home', {\n          user: data\n        });\n      }).catch(function (error) {\n        alert(error);\n      });\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    style: {\n      flex: 1,\n      width: '100%'\n    },\n    keyboardShouldPersistTaps: \"always\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../../assets/icon.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Full Name\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setFullName(text);\n    },\n    value: fullName,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"E-mail\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Confirm Password\",\n    onChangeText: function onChangeText(text) {\n      return setConfirmPassword(text);\n    },\n    value: confirmPassword,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return onRegisterPress();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Create account\")), React.createElement(View, {\n    style: styles.footerView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.footerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, \"Already got an account?\", ' ', React.createElement(Text, {\n    onPress: onFooterLinkPress,\n    style: styles.footerLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Log in\")))));\n}","map":{"version":3,"sources":["/Users/hamedjenabi/project/react-native-popword/src/screens/RegistrationScreen/RegistrationScreen.js"],"names":["React","useState","firebase","KeyboardAwareScrollView","styles","RegistrationScreen","navigation","fullName","setFullName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","onFooterLinkPress","navigate","onRegisterPress","alert","auth","createUserWithEmailAndPassword","then","response","uid","user","data","id","usersRef","firestore","collection","doc","set","catch","error","container","flex","width","logo","require","input","text","button","buttonTitle","footerView","footerText","footerLink"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { firebase } from '../../firebase/config';\n\nimport { Image, Text, TextInput, TouchableOpacity, View } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport styles from './styles';\n\nexport default function RegistrationScreen({ navigation }) {\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const onFooterLinkPress = () => {\n    navigation.navigate('Login');\n  };\n\n  const onRegisterPress = () => {\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match.\");\n      return;\n    }\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((response) => {\n        const uid = response.user.uid;\n        const data = {\n          id: uid,\n          email,\n          fullName,\n        };\n        const usersRef = firebase.firestore().collection('users');\n        usersRef\n          .doc(uid)\n          .set(data)\n          .then(() => {\n            navigation.navigate('Home', { user: data });\n          })\n          .catch((error) => {\n            alert(error);\n          });\n      })\n      .catch((error) => {\n        alert(error);\n      });\n  };\n\n  return (\n    <View style={styles.container}>\n      <KeyboardAwareScrollView\n        style={{ flex: 1, width: '100%' }}\n        keyboardShouldPersistTaps=\"always\"\n      >\n        <Image\n          style={styles.logo}\n          source={require('../../../assets/icon.png')}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"Full Name\"\n          placeholderTextColor=\"#aaaaaa\"\n          onChangeText={(text) => setFullName(text)}\n          value={fullName}\n          underlineColorAndroid=\"transparent\"\n          autoCapitalize=\"none\"\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"E-mail\"\n          placeholderTextColor=\"#aaaaaa\"\n          onChangeText={(text) => setEmail(text)}\n          value={email}\n          underlineColorAndroid=\"transparent\"\n          autoCapitalize=\"none\"\n        />\n        <TextInput\n          style={styles.input}\n          placeholderTextColor=\"#aaaaaa\"\n          secureTextEntry\n          placeholder=\"Password\"\n          onChangeText={(text) => setPassword(text)}\n          value={password}\n          underlineColorAndroid=\"transparent\"\n          autoCapitalize=\"none\"\n        />\n        <TextInput\n          style={styles.input}\n          placeholderTextColor=\"#aaaaaa\"\n          secureTextEntry\n          placeholder=\"Confirm Password\"\n          onChangeText={(text) => setConfirmPassword(text)}\n          value={confirmPassword}\n          underlineColorAndroid=\"transparent\"\n          autoCapitalize=\"none\"\n        />\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => onRegisterPress()}\n        >\n          <Text style={styles.buttonTitle}>Create account</Text>\n        </TouchableOpacity>\n        <View style={styles.footerView}>\n          <Text style={styles.footerText}>\n            Already got an account?{' '}\n            <Text onPress={onFooterLinkPress} style={styles.footerLink}>\n              Log in\n            </Text>\n          </Text>\n        </View>\n      </KeyboardAwareScrollView>\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}