{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/hamedjenabi/project/react-native-popword/src/Components/Headers.js\";\nimport React, { useState, useEffect } from 'react';\nimport { firebase } from \"../firebase/config\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nexport default function Headers() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEnabled = _useState2[0],\n      setIsEnabled = _useState2[1];\n\n  var _useState3 = useState('Login'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      logText = _useState4[0],\n      setLogText = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      user = _useState6[0],\n      setUser = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showNav = _useState8[0],\n      setShowNav = _useState8[1];\n\n  var navigation = useNavigation();\n\n  var toggleSwitch = function toggleSwitch() {\n    return setIsEnabled(function (previousState) {\n      return !previousState;\n    });\n  };\n\n  var onPressList = function onPressList() {\n    navigation.navigate('List');\n  };\n\n  var onPressLogout = function onPressLogout() {\n    navigation.navigate('Login');\n  };\n\n  var showMenuOnPress = function showMenuOnPress() {\n    setShowNav(!showNav);\n  };\n\n  useEffect(function () {\n    var usersRef = firebase.firestore().collection('users');\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        usersRef.doc(user.uid).get().then(function (document) {\n          var userData = document.data();\n          setLogText('Logout');\n          setUser(userData);\n        }).catch(function (error) {\n          alert('error in 88');\n        });\n      } else {\n        setLogText('Login');\n      }\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.main_menu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: showMenuOnPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.Hamburger,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, showNav ? 'X' : 'â˜°')), showNav ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: onPressLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Home\")), React.createElement(TouchableOpacity, {\n    onPress: onPressList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Word List\")), React.createElement(TouchableOpacity, {\n    onPress: onPressLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, logText))) : null, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"POP WORD\"), React.createElement(Switch, {\n    trackColor: {\n      false: '#767577',\n      true: '#81b0ff'\n    },\n    thumbColor: isEnabled ? '#f5dd4b' : '#f4f3f4',\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: toggleSwitch,\n    value: isEnabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  main_menu: {\n    flex: 1,\n    marginTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n    zIndex: -1\n  },\n  popUp: {\n    flex: 1,\n    justifyContent: 'space-between',\n    marginRight: 5,\n    backgroundColor: 'white',\n    display: 'flex',\n    zIndex: 10\n  },\n  header: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#009688',\n    zIndex: -1\n  },\n  Hamburger: {\n    fontSize: 26,\n    marginRight: 20,\n    alignSelf: 'flex-end'\n  },\n  text: {\n    fontSize: 20,\n    marginBottom: 30\n  },\n  title: {\n    fontSize: 30\n  }\n});",
  "map": {
    "version": 3,
    "sources": [
      "/Users/hamedjenabi/project/react-native-popword/src/Components/Headers.js"
    ],
    "names": [
      "React",
      "useState",
      "useEffect",
      "firebase",
      "useNavigation",
      "Headers",
      "isEnabled",
      "setIsEnabled",
      "logText",
      "setLogText",
      "user",
      "setUser",
      "showNav",
      "setShowNav",
      "navigation",
      "toggleSwitch",
      "previousState",
      "onPressList",
      "navigate",
      "onPressLogout",
      "showMenuOnPress",
      "usersRef",
      "firestore",
      "collection",
      "auth",
      "onAuthStateChanged",
      "doc",
      "uid",
      "get",
      "then",
      "document",
      "userData",
      "data",
      "catch",
      "error",
      "alert",
      "styles",
      "main_menu",
      "Hamburger",
      "text",
      "header",
      "title",
      "false",
      "true",
      "StyleSheet",
      "create",
      "flex",
      "marginTop",
      "Platform",
      "OS",
      "StatusBar",
      "currentHeight",
      "zIndex",
      "popUp",
      "justifyContent",
      "marginRight",
      "backgroundColor",
      "display",
      "flexDirection",
      "alignItems",
      "fontSize",
      "alignSelf",
      "marginBottom"
    ],
    "mappings": ";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT;;;;;;;;AAUA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA,kBACEJ,QAAQ,CAAC,KAAD,CADV;AAAA;AAAA,MACzBK,SADyB;AAAA,MACdC,YADc;;AAAA,mBAEFN,QAAQ,CAAC,OAAD,CAFN;AAAA;AAAA,MAEzBO,OAFyB;AAAA,MAEhBC,UAFgB;;AAAA,mBAGRR,QAAQ,CAAC,IAAD,CAHA;AAAA;AAAA,MAGzBS,IAHyB;AAAA,MAGnBC,OAHmB;;AAAA,mBAIFV,QAAQ,CAAC,KAAD,CAJN;AAAA;AAAA,MAIzBW,OAJyB;AAAA,MAIhBC,UAJgB;;AAKhC,MAAMC,UAAU,GAAGV,aAAa,EAAhC;;AAEA,MAAMW,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMR,YAAY,CAAC,UAACS,aAAD;AAAA,aAAmB,CAACA,aAApB;AAAA,KAAD,CAAlB;AAAA,GAArB;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAExBH,IAAAA,UAAU,CAACI,QAAX,CAAoB,MAApB;AACD,GAHD;;AAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAE1BL,IAAAA,UAAU,CAACI,QAAX,CAAoB,OAApB;AACD,GAHD;;AAKA,MAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BP,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAKAV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMmB,QAAQ,GAAGlB,QAAQ,CAACmB,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAjB;AACApB,IAAAA,QAAQ,CAACqB,IAAT,GAAgBC,kBAAhB,CAAmC,UAACf,IAAD,EAAU;AAC3C,UAAIA,IAAJ,EAAU;AACRW,QAAAA,QAAQ,CACLK,GADH,CACOhB,IAAI,CAACiB,GADZ,EAEGC,GAFH,GAGGC,IAHH,CAGQ,UAACC,QAAD,EAAc;AAClB,cAAMC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,EAAjB;AACAvB,UAAAA,UAAU,CAAC,QAAD,CAAV;AACAE,UAAAA,OAAO,CAACoB,QAAD,CAAP;AACD,SAPH,EAQGE,KARH,CAQS,UAACC,KAAD,EAAW;AAChBC,UAAAA,KAAK,CAAC,OAAD,CAAL;AACD,SAVH;AAWD,OAZD,MAYO;AACL1B,QAAAA,UAAU,CAAC,OAAD,CAAV;AACD;AACF,KAhBD;AAiBD,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,SACE,0CACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE2B,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEjB,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgB,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC1B,OAAO,GAAG,GAAH,GAAS,GAAhD,CADF,CADF,EAIGA,OAAO,GACN,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEO,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEiB,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,EAIE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEtB,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmB,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAJF,EAOE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEpB,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEiB,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2B/B,OAA3B,CADF,CAPF,CADM,GAaJ,IAjBN,EAmBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4B,MAAM,CAACI,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE;AAAEC,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KADd;AAEE,IAAA,UAAU,EAAErC,SAAS,GAAG,SAAH,GAAe,SAFtC;AAGE,IAAA,mBAAmB,EAAC,SAHtB;AAIE,IAAA,aAAa,EAAES,YAJjB;AAKE,IAAA,KAAK,EAAET,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAnBF,CADF,CADF;AAkCD;AAED,IAAM8B,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,SAAS,EAAEC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4BC,SAAS,CAACC,aAAtC,GAAsD,CAFxD;AAGTC,IAAAA,MAAM,EAAE,CAAC;AAHA,GADoB;AAM/BC,EAAAA,KAAK,EAAE;AACLP,IAAAA,IAAI,EAAE,CADD;AAELQ,IAAAA,cAAc,EAAE,eAFX;AAGLC,IAAAA,WAAW,EAAE,CAHR;AAILC,IAAAA,eAAe,EAAE,OAJZ;AAKLC,IAAAA,OAAO,EAAE,MALJ;AAMLL,IAAAA,MAAM,EAAE;AANH,GANwB;AAe/BZ,EAAAA,MAAM,EAAE;AACNM,IAAAA,IAAI,EAAE,CADA;AAENY,IAAAA,aAAa,EAAE,KAFT;AAGNC,IAAAA,UAAU,EAAE,QAHN;AAINH,IAAAA,eAAe,EAAE,SAJX;AAKNJ,IAAAA,MAAM,EAAE,CAAC;AALH,GAfuB;AAsB/Bd,EAAAA,SAAS,EAAE;AACTsB,IAAAA,QAAQ,EAAE,EADD;AAETL,IAAAA,WAAW,EAAE,EAFJ;AAGTM,IAAAA,SAAS,EAAE;AAHF,GAtBoB;AA2B/BtB,EAAAA,IAAI,EAAE;AACJqB,IAAAA,QAAQ,EAAE,EADN;AAEJE,IAAAA,YAAY,EAAE;AAFV,GA3ByB;AA+B/BrB,EAAAA,KAAK,EAAE;AACLmB,IAAAA,QAAQ,EAAE;AADL;AA/BwB,CAAlB,CAAf",
    "sourcesContent": [
      "import React, { useState, useEffect } from 'react';\nimport { firebase } from '../firebase/config';\nimport {\n  StyleSheet,\n  Text,\n  Platform,\n  StatusBar,\n  View,\n  Switch,\n  TouchableOpacity,\n} from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nexport default function Headers() {\n  const [isEnabled, setIsEnabled] = useState(false);\n  const [logText, setLogText] = useState('Login');\n  const [user, setUser] = useState(null);\n  const [showNav, setShowNav] = useState(false);\n  const navigation = useNavigation();\n\n  const toggleSwitch = () => setIsEnabled((previousState) => !previousState);\n\n  const onPressList = () => {\n    // firebase.auth().signOut();\n    navigation.navigate('List');\n  };\n  const onPressLogout = () => {\n    // firebase.auth().signOut();\n    navigation.navigate('Login');\n  };\n\n  const showMenuOnPress = () => {\n    setShowNav(!showNav);\n  };\n\n  /*********** This checks if user is logged in *********/\n  useEffect(() => {\n    const usersRef = firebase.firestore().collection('users');\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        usersRef\n          .doc(user.uid)\n          .get()\n          .then((document) => {\n            const userData = document.data();\n            setLogText('Logout');\n            setUser(userData);\n          })\n          .catch((error) => {\n            alert('error in 88e');\n          });\n      } else {\n        setLogText('Login');\n      }\n    });\n  }, []);\n\n  return (\n    <>\n      <View style={styles.main_menu}>\n        <TouchableOpacity onPress={showMenuOnPress}>\n          <Text style={styles.Hamburger}>{showNav ? 'X' : 'â˜°'}</Text>\n        </TouchableOpacity>\n        {showNav ? (\n          <View>\n            <TouchableOpacity onPress={onPressLogout}>\n              <Text style={styles.text}>Home</Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={onPressList}>\n              <Text style={styles.text}>Word List</Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={onPressLogout}>\n              <Text style={styles.text}>{logText}</Text>\n            </TouchableOpacity>\n            {/* <Text style={styles.text}>{user.fullName}</Text> */}\n          </View>\n        ) : null}\n\n        <View style={styles.header}>\n          <Text style={styles.title}>POP WORD</Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={isEnabled ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={toggleSwitch}\n            value={isEnabled}\n          />\n        </View>\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  main_menu: {\n    flex: 1,\n    marginTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n    zIndex: -1,\n  },\n  popUp: {\n    flex: 1,\n    justifyContent: 'space-between',\n    marginRight: 5,\n    backgroundColor: 'white',\n    display: 'flex',\n    zIndex: 10,\n  },\n\n  header: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#009688',\n    zIndex: -1,\n  },\n  Hamburger: {\n    fontSize: 26,\n    marginRight: 20,\n    alignSelf: 'flex-end',\n  },\n  text: {\n    fontSize: 20,\n    marginBottom: 30,\n  },\n  title: {\n    fontSize: 30,\n  },\n});\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
