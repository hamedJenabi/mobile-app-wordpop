{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/hamedjenabi/project/react-native-popword/src/screens/LoginScreen/LoginScreen.js\";\nimport React, { useState } from 'react';\nimport { firebase } from \"../../firebase/config\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport styles from \"./styles\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onFooterLinkPress = function onFooterLinkPress() {\n    navigation.navigate('Registration');\n  };\n\n  var onLoginPress = function onLoginPress() {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function (response) {\n      var uid = response.user.uid;\n      var usersRef = firebase.firestore().collection('users');\n      usersRef.doc(uid).get().then(function (firestoreDocument) {\n        if (!firestoreDocument.exists) {\n          alert('User does not exist anymore.');\n          return;\n        }\n\n        var user = firestoreDocument.data();\n        navigation.navigate('Home', {\n          user: user\n        });\n      }).catch(function (error) {\n        alert('error in 95',error);\n      });\n    }).catch(function (error) {\n      alert('error in 95',error);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    style: {\n      flex: 1,\n      width: '100%'\n    },\n    keyboardShouldPersistTaps: \"always\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../../assets/icon.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"E-mail\",\n    placeholderTextColor: \"#aaaaaa\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholderTextColor: \"#aaaaaa\",\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    underlineColorAndroid: \"transparent\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return onLoginPress();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Log in\")), React.createElement(View, {\n    style: styles.footerView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.footerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Don't have an account?\", ' ', React.createElement(Text, {\n    onPress: onFooterLinkPress,\n    style: styles.footerLink,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Sign up\")))));\n}",
  "map": {
    "version": 3,
    "sources": [
      "/Users/hamedjenabi/project/react-native-popword/src/screens/LoginScreen/LoginScreen.js"
    ],
    "names": [
      "React",
      "useState",
      "firebase",
      "KeyboardAwareScrollView",
      "styles",
      "LoginScreen",
      "navigation",
      "email",
      "setEmail",
      "password",
      "setPassword",
      "onFooterLinkPress",
      "navigate",
      "onLoginPress",
      "auth",
      "signInWithEmailAndPassword",
      "then",
      "response",
      "uid",
      "user",
      "usersRef",
      "firestore",
      "collection",
      "doc",
      "get",
      "firestoreDocument",
      "exists",
      "alert",
      "data",
      "catch",
      "error",
      "container",
      "flex",
      "width",
      "logo",
      "require",
      "input",
      "text",
      "button",
      "buttonTitle",
      "footerView",
      "footerText",
      "footerLink"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import React, { useState } from 'react';\nimport { firebase } from '../../firebase/config';\n\nimport { Image, Text, TextInput, TouchableOpacity, View } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport styles from './styles';\n\nexport default function LoginScreen({ navigation }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onFooterLinkPress = () => {\n    navigation.navigate('Registration');\n  };\n\n  const onLoginPress = () => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((response) => {\n        const uid = response.user.uid;\n        const usersRef = firebase.firestore().collection('users');\n        usersRef\n          .doc(uid)\n          .get()\n          .then((firestoreDocument) => {\n            if (!firestoreDocument.exists) {\n              alert('User does not exist anymore.');\n              return;\n            }\n            const user = firestoreDocument.data();\n            navigation.navigate('Home', { user });\n          })\n          .catch((error) => {\n            alert('error in 95',error);\n          });\n      })\n      .catch((error) => {\n        alert('error in 95',error);\n      });\n  };\n\n  return (\n    <View style={styles.container}>\n      <KeyboardAwareScrollView\n        style={{ flex: 1, width: '100%' }}\n        keyboardShouldPersistTaps=\"always\"\n      >\n        <Image\n          style={styles.logo}\n          source={require('../../../assets/icon.png')}\n        />\n        <TextInput\n          style={styles.input}\n          placeholder=\"E-mail\"\n          placeholderTextColor=\"#aaaaaa\"\n          onChangeText={(text) => setEmail(text)}\n          value={email}\n          underlineColorAndroid=\"transparent\"\n          autoCapitalize=\"none\"\n        />\n        <TextInput\n          style={styles.input}\n          placeholderTextColor=\"#aaaaaa\"\n          secureTextEntry\n          placeholder=\"Password\"\n          onChangeText={(text) => setPassword(text)}\n          value={password}\n          underlineColorAndroid=\"transparent\"\n          autoCapitalize=\"none\"\n        />\n        <TouchableOpacity style={styles.button} onPress={() => onLoginPress()}>\n          <Text style={styles.buttonTitle}>Log in</Text>\n        </TouchableOpacity>\n        <View style={styles.footerView}>\n          <Text style={styles.footerText}>\n            Don't have an account?{' '}\n            <Text onPress={onFooterLinkPress} style={styles.footerLink}>\n              Sign up\n            </Text>\n          </Text>\n        </View>\n      </KeyboardAwareScrollView>\n    </View>\n  );\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
